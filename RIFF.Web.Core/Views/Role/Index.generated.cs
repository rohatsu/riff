#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using RIFF.Web.Core;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Role/Index.cshtml")]
    public partial class _Views_Role_Index_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_Role_Index_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\Role\Index.cshtml"
  
    ViewBag.Title = "Access";
    ViewBag.SuppressTitle = true;
    Layout = "~/Views/Core/_RIFFPage.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" id=\"tabs\"");

WriteLiteral("></div>\r\n");

            
            #line 8 "..\..\Views\Role\Index.cshtml"
Write(RIFF.Web.Core.App_Code.RazorHelpers.TabsBase());

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" id=\"tab1\"");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n    <table");

WriteLiteral(" style=\"width: 1550px; table-layout: fixed;\"");

WriteLiteral(">\r\n        <tr>\r\n            <td");

WriteLiteral(" style=\"width: 775px; vertical-align: top;\"");

WriteLiteral(">\r\n                <h3>Roles</h3>\r\n                <div");

WriteLiteral(" id=\"rolesContainer\"");

WriteLiteral(" style=\"height: 750px;\"");

WriteLiteral(">\r\n                </div>\r\n            </td>\r\n            <td");

WriteLiteral(" style=\"width: 775px; vertical-align: top;\"");

WriteLiteral(">\r\n                <h3>Effective Permissions</h3>\r\n                <div");

WriteLiteral(" id=\"permissionsContainer\"");

WriteLiteral(" style=\"height: 750px;\"");

WriteLiteral(">\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>" +
"\r\n<div");

WriteLiteral(" id=\"tab2\"");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(">\r\n    <table");

WriteLiteral(" style=\"width: 1500px; table-layout: fixed; margin-top: 13px;\"");

WriteLiteral(" cellpadding=\"0\"");

WriteLiteral(" cellspacing=\"0\"");

WriteLiteral(">\r\n        <tr>\r\n            <td>\r\n                <div");

WriteLiteral(" id=\"keysbox\"");

WriteLiteral(" class=\"box\"");

WriteLiteral(">\r\n                    <div");

WriteLiteral(" data-options=\"dxItem: { ratio: 0.25 }\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(" style=\"width: 90%; text-align: right;\"");

WriteLiteral(">Vault Password:</div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" data-options=\"dxItem: { ratio: 0.35 }\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"p\"");

WriteLiteral(" style=\"width: 90%;\"");

WriteLiteral("></div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" data-options=\"dxItem: { ratio: 0.25 }\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"vault_load\"");

WriteLiteral(" style=\"width: 90%;\"");

WriteLiteral("></div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" data-options=\"dxItem: { ratio: 0.25 }\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"reset_password\"");

WriteLiteral(" style=\"width: 90%;\"");

WriteLiteral("></div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" data-options=\"dxItem: { ratio: 0.25 }\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"reset_master\"");

WriteLiteral(" style=\"width: 90%;\"");

WriteLiteral("></div>\r\n                    </div>\r\n                    <div");

WriteLiteral(" data-options=\"dxItem: { ratio: 0.25 }\"");

WriteLiteral(">\r\n                        <div");

WriteLiteral(" id=\"backup_master\"");

WriteLiteral(" style=\"width: 90%;\"");

WriteLiteral("></div>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n " +
"       </tr>\r\n        <tr>\r\n            <td");

WriteLiteral(" style=\"width: 1500px; vertical-align: top;\"");

WriteLiteral(">\r\n                <div");

WriteLiteral(" id=\"keysContainer\"");

WriteLiteral(" style=\"height: 750px;\"");

WriteLiteral(">\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>" +
"\r\n\r\n<div");

WriteLiteral(" id=\"changepassworddialog\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"dx-fieldset\"");

WriteLiteral(" style=\"width: 350px;\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(">New Password:</div>\r\n            <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"newpassword1\"");

WriteLiteral("></div>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(">Repeat New Password:</div>\r\n            <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"newpassword2\"");

WriteLiteral("></div>\r\n        </div>\r\n        <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n            <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral("><div");

WriteLiteral(" id=\"submitpassword\"");

WriteLiteral(" style=\"margin-top: 10px;\"");

WriteLiteral("></div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");

            
            #line 77 "..\..\Views\Role\Index.cshtml"
 using (Html.BeginForm("BackupMasterKey", "Role", FormMethod.Post, new { id = "backupform" }))
{

            
            #line default
            #line hidden
WriteLiteral("    <input");

WriteLiteral(" name=\"p\"");

WriteLiteral(" type=\"hidden\"");

WriteLiteral(" id=\"backup_p\"");

WriteLiteral(" />\r\n");

            
            #line 80 "..\..\Views\Role\Index.cshtml"
}

            
            #line default
            #line hidden
WriteLiteral("\r\n");

DefineSection("RIFFPageScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n        var setRequiresApply = function () {\r\n            RIFFWebCore.RIFFPa" +
"ge.populateGrid(\"");

            
            #line 86 "..\..\Views\Role\Index.cshtml"
                                          Write(Url.Action("GetPermissions", "Role"));

            
            #line default
            #line hidden
WriteLiteral("\", null, initializePermissions);\r\n        }\r\n\r\n        var initializeRoles = func" +
"tion (data) {\r\n\r\n            $(\"#rolesContainer\").dxDataGrid({\r\n                " +
"hoverStateEnabled: true,\r\n                dataSource: data.Roles,\r\n             " +
"   columns: [\r\n                    { dataField: \'RoleName\', caption: \'Role Name\'" +
", width: \"200px\", sortIndex: 0, sortOrder: \'asc\' },\r\n                    { dataF" +
"ield: \'NumMembers\', caption: \'# Members\', width: \"200px\" },\r\n                   " +
" { dataField: \'NumPermissions\', caption: \'# Permissions\', width: \"200px\" }\r\n    " +
"            ],\r\n                masterDetail: {\r\n                    enabled: tr" +
"ue,\r\n                    template: function (container, info) {\r\n               " +
"         $(\'<h3>Members</h3>\').appendTo(container);\r\n                        $(\'" +
"<div>\').dxDataGrid({\r\n                            hoverStateEnabled: true,\r\n    " +
"                        columnAutoWidth: true,\r\n                            data" +
"Source: info.row.data.Members,\r\n                            columns: [\r\n        " +
"                        { dataField: \'Username\', caption: \'User Login\' },\r\n     " +
"                           { dataField: \'RoleName\', caption: \'Role\', visible: fa" +
"lse }\r\n                            ],\r\n                            editing: {\r\n " +
"                               allowUpdating: false,\r\n                          " +
"      mode: \'row\',\r\n                                allowAdding: true,\r\n        " +
"                        allowDeleting: true\r\n                            },\r\n   " +
"                         onRowRemoved: function (e) {\r\n                         " +
"       RIFFWebCore.Helpers.postUserAction(\"");

            
            #line 118 "..\..\Views\Role\Index.cshtml"
                                                               Write(Url.Action("RemoveMember", "Role"));

            
            #line default
            #line hidden
WriteLiteral("\", e.data, \"Role membership removed.\",\r\n                                    setRe" +
"quiresApply);\r\n                            },\r\n                            onRow" +
"Inserted: function (e) {\r\n                                RIFFWebCore.Helpers.po" +
"stUserAction(\"");

            
            #line 122 "..\..\Views\Role\Index.cshtml"
                                                               Write(Url.Action("AddMember", "Role"));

            
            #line default
            #line hidden
WriteLiteral("\", e.data, \"Role membership added.\",\r\n                                    setRequ" +
"iresApply);\r\n                            },\r\n                            onInitN" +
"ewRow: function (e) {\r\n                                e.data.RoleName = info.ro" +
"w.data.RoleName;\r\n                            },\r\n                            lo" +
"adPanel: {\r\n                                enabled: false\r\n                    " +
"        }\r\n                        }).appendTo(container);\r\n                    " +
"    $(\'<br /><h3>Permissions</h3>\').appendTo(container);\r\n                      " +
"  $(\'<div>\').dxDataGrid({\r\n                            hoverStateEnabled: true,\r" +
"\n                            columnAutoWidth: true,\r\n                           " +
" dataSource: info.row.data.Permissions,\r\n                            columns: [\r" +
"\n                                { dataField: \'Area\', caption: \'Area\' },\r\n      " +
"                          { dataField: \'Controller\', caption: \'Controller\' },\r\n " +
"                               { dataField: \'Permission\', caption: \'Permission\' " +
"},\r\n                                { dataField: \'IsAllowed\', caption: \'Enabled\'" +
", datatype: \'boolean\' }\r\n                            ],\r\n                       " +
"     loadPanel: {\r\n                                enabled: false\r\n             " +
"               }\r\n                        }).appendTo(container);\r\n             " +
"       }\r\n                },\r\n                columnChooser: { enabled: false }," +
"\r\n                allowColumnReordering: true,\r\n                allowColumnResiz" +
"ing: true,\r\n                sorting: { mode: \'single\' },\r\n                column" +
"AutoWidth: false,\r\n                pager: { visible: false },\r\n                p" +
"aging: { enabled: false },\r\n                headerFilter: { visible: false },\r\n " +
"               rowAlternationEnabled: true,\r\n                scrolling: {\r\n     " +
"               mode: \'virtual\',\r\n                    preloadEnabled: true\r\n     " +
"           },\r\n                remoteOperations: false,\r\n                loadPan" +
"el: {\r\n                    enabled: false\r\n                },\r\n                f" +
"ilterRow: { visible: false },\r\n                searchPanel: { visible: true },\r\n" +
"                selection: { mode: \'single\' }\r\n            });\r\n\r\n            se" +
"tRequiresApply();\r\n        }\r\n\r\n        var initializePermissions = function (da" +
"ta) {\r\n\r\n            $(\"#permissionsContainer\").dxDataGrid({\r\n                ho" +
"verStateEnabled: true,\r\n                dataSource: data.Permissions,\r\n         " +
"       columns: [\r\n                    { dataField: \'UserName\', caption: \'User L" +
"ogin\', width: \"120px\", sortIndex: 0, sortOrder: \'asc\' },\r\n                    { " +
"dataField: \'RoleName\', caption: \'Role Name\', width: \"120px\", sortIndex: 1, sortO" +
"rder: \'asc\' },\r\n                    { dataField: \'Area\', caption: \'Area\', width:" +
" \"75px\" },\r\n                    { dataField: \'Controller\', caption: \'Controller\'" +
", width: \"160px\" },\r\n                    { dataField: \'Permission\', caption: \'Pe" +
"rmission\', width: \"100px\" },\r\n                    { dataField: \'IsAllowed\', capt" +
"ion: \'Enabled\', width: \"100px\", datatype: \'boolean\' }\r\n                ],\r\n     " +
"           columnChooser: { enabled: false },\r\n                allowColumnReorde" +
"ring: true,\r\n                allowColumnResizing: true,\r\n                sorting" +
": { mode: \'single\' },\r\n                columnAutoWidth: false,\r\n                " +
"pager: { visible: false },\r\n                paging: { enabled: false },\r\n       " +
"         headerFilter: { visible: true },\r\n                rowAlternationEnabled" +
": true,\r\n                scrolling: {\r\n                    mode: \'virtual\',\r\n   " +
"                 preloadEnabled: true\r\n                },\r\n                remot" +
"eOperations: false,\r\n                loadPanel: {\r\n                    enabled: " +
"false\r\n                },\r\n                filterRow: { visible: false },\r\n     " +
"           searchPanel: { visible: true },\r\n                selection: { mode: \'" +
"single\' }\r\n            });\r\n        }\r\n\r\n        var initializeKeys = function (" +
"data) {\r\n\r\n            $(\"#keysContainer\").dxDataGrid({\r\n                hoverSt" +
"ateEnabled: true,\r\n                dataSource: data.Keys,\r\n                colum" +
"ns: [\r\n                    { dataField: \'Vault\', caption: \'Key Vault Name\', widt" +
"h: \"160px\", sortIndex: 0, sortOrder: \'asc\' },\r\n                    { dataField: " +
"\'KeyID\', caption: \'Key ID\', width: \"160px\", sortIndex: 1, sortOrder: \'desc\' },\r\n" +
"                    { dataField: \'SecuredByKeyID\', caption: \'Secured By Key\', wi" +
"dth: \"160px\" },\r\n                    { dataField: \'SecuredByUsername\', caption: " +
"\'Secured By Password\', width: \"160px\" },\r\n                    { dataField: \'Ciph" +
"erStream\', caption: \'Encrypted Representation\', width: \"600px\", allowFiltering: " +
"false },\r\n                    { dataField: \'Accessible\', caption: \'Accessible\', " +
"width: \"160px\", datatype: \'boolean\' }\r\n                ],\r\n                colum" +
"nChooser: { enabled: false },\r\n                allowColumnReordering: true,\r\n   " +
"             allowColumnResizing: true,\r\n                sorting: { mode: \'singl" +
"e\' },\r\n                columnAutoWidth: false,\r\n                pager: { visible" +
": false },\r\n                paging: { enabled: false },\r\n                headerF" +
"ilter: { visible: true },\r\n                rowAlternationEnabled: true,\r\n       " +
"         scrolling: {\r\n                    mode: \'virtual\',\r\n                   " +
" preloadEnabled: true\r\n                },\r\n                remoteOperations: fal" +
"se,\r\n                loadPanel: {\r\n                    enabled: false\r\n         " +
"       },\r\n                filterRow: { visible: false },\r\n                searc" +
"hPanel: { visible: true },\r\n                selection: { mode: \'single\' }\r\n     " +
"       });\r\n        }\r\n\r\n        var doLogin = function (e) {\r\n            var p" +
" = getPassword();\r\n\r\n            if (!p) {\r\n                RIFFWebCore.Helpers." +
"alert(\"Please input your current Vault Password first.\");\r\n                retur" +
"n;\r\n            }\r\n\r\n            RIFFWebCore.Helpers.postUserActionCallback(\'");

            
            #line 254 "..\..\Views\Role\Index.cshtml"
                                                   Write(Url.Action("GetKeys"));

            
            #line default
            #line hidden
WriteLiteral(@"', { p: p },
                function (data) {
                    initializeKeys(data);
                });
        }

        var getPassword = function () {
            return $('#p').dxTextBox(""instance"").option(""value"");
        }

        var changePassword = function () {
            var p = getPassword();

            if (!p) {
                RIFFWebCore.Helpers.alert(""Please input your current Vault Password first."");
                return;
            }
            $('#changepassworddialog').dxPopup({
                showTitle: true,
                title: 'Change password',
                width: 400,
                height: 180,
                visible: true
            });

            $('#newpassword1').dxTextBox({ mode: 'password', value: '' });
            $('#newpassword2').dxTextBox({ mode: 'password', value: '' });
            $('#submitpassword').dxButton({ text: 'Change', onClick: doChangePassword });
        }

        var resetMaster = function () {
            var p = getPassword();

            if (!p) {
                RIFFWebCore.Helpers.alert(""Please input your current Vault Password first."");
                return;
            }

            RIFFWebCore.Helpers.areYouSure(""randomize the Master Key (this will remove everyone else's access to it)"", function () {
                RIFFWebCore.Helpers.postUserActionCallback(""");

            
            #line 293 "..\..\Views\Role\Index.cshtml"
                                                       Write(Url.Action("ResetMaster"));

            
            #line default
            #line hidden
WriteLiteral(@""", { p: getPassword() }, doLogin);
            });
        }

        var backupMaster = function () {
            var p = getPassword();

            if (!p) {
                RIFFWebCore.Helpers.alert(""Please input your current Vault Password first."");
                return;
            }

            $('#backup_p').val(getPassword());
            $('#backupform').submit();
        }

        var doChangePassword = function () {
            var p1 = $('#newpassword1').dxTextBox('instance').option('value');
            var p2 = $('#newpassword2').dxTextBox('instance').option('value');
            if (!p1 || !p2) {
                RIFFWebCore.Helpers.alert('Please enter the password twice.')
                return;
            }
            if (p1 !== p2) {
                RIFFWebCore.Helpers.alert('Passwords must match.')
                return;
            }
            RIFFWebCore.Helpers.postUserAction(""");

            
            #line 320 "..\..\Views\Role\Index.cshtml"
                                           Write(Url.Action("ChangePassword"));

            
            #line default
            #line hidden
WriteLiteral("\", { old_p: getPassword(), new_p: p1 }, \"Password changed.\", function () {\r\n     " +
"           $(\'#p\').dxTextBox(\'instance\').option(\'value\', p1);\r\n\r\n               " +
" $(\'#changepassworddialog\').dxPopup(\"instance\").toggle(false);\r\n                " +
"doLogin();\r\n            });\r\n        }\r\n\r\n        var RFinitialize = function ()" +
" {\r\n            $(\'#tabs\').dxTabs({\r\n                dataSource:\r\n              " +
"      [\r\n                        { text: \"Roles\", content: \"#tab1\" },\r\n         " +
"               { text: \"Keys\", content: \"#tab2\" },\r\n                    ],\r\n    " +
"            width: \"30%\",\r\n                selectedIndex: 0,\r\n                on" +
"ItemClick: function (e) {\r\n                    $(\".tab-content\").hide();\r\n      " +
"              $(e.itemData.content).show();\r\n                    if (e.itemData." +
"content === \"#tab2\") {\r\n                        $(\'#p\').dxTextBox(\'instance\').fo" +
"cus();\r\n                    }\r\n                }\r\n            });\r\n\r\n           " +
" $(\'#keysbox\').dxBox({\r\n                direction: \'row\',\r\n                heigh" +
"t: \'30px\',\r\n                width: \'900px\'\r\n            });\r\n\r\n            $(\'#p" +
"\').dxTextBox({ mode: \'password\', placeholder: \'\', valueChangeEvent: \'change keyd" +
"own\', onEnterKey: doLogin });\r\n\r\n            $(\'#vault_load\').dxButton({ text: \'" +
"Load Vault\', onClick: doLogin });\r\n            $(\'#reset_password\').dxButton({ t" +
"ext: \'Change Password\', onClick: changePassword });\r\n            $(\'#reset_maste" +
"r\').dxButton({ text: \'Reset Master Key\', onClick: resetMaster });\r\n            $" +
"(\'#backup_master\').dxButton({ text: \'Backup Master Key\', onClick: backupMaster }" +
");\r\n\r\n            RIFFWebCore.RIFFPage.populateGrid(\"");

            
            #line 359 "..\..\Views\Role\Index.cshtml"
                                          Write(Url.Action("GetRoles", "Role"));

            
            #line default
            #line hidden
WriteLiteral("\", null, initializeRoles);\r\n        };\r\n    </script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
