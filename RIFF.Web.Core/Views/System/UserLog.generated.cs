#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using RIFF.Web.Core;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/System/UserLog.cshtml")]
    public partial class _Views_System_UserLog_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_System_UserLog_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\System\UserLog.cshtml"
  
    ViewBag.Title = "Activity Log";
    Layout = "~/Views/Core/_RIFFPage.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" class=\"dx-fieldset\"");

WriteLiteral(" style=\"width: 300px;\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(">Log Date</div>\r\n        <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"logdate\"");

WriteLiteral("></div>\r\n    </div>\r\n</div>\r\n<div");

WriteLiteral(" id=\"gridContainer\"");

WriteLiteral(" style=\"width:1550px; margin: 0 auto; height: 750px;\"");

WriteLiteral("></div>\r\n\r\n");

DefineSection("RIFFPageScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var initializeGrid = function (data) {\r\n            $(\"#gridContainer\"" +
").dxDataGrid({\r\n                hoverStateEnabled: true,\r\n                dataSo" +
"urce: data,\r\n\r\n                columns: [\r\n                    { dataField: \'Tim" +
"estamp\', caption: \'Time\', width: \"150px\", dataType: \'date\', format: \"dd/MM/yyyy " +
"HH:mm:ss\", alignment: \"center\", sortIndex: 0, sortOrder: \'desc\' },\r\n            " +
"        { dataField: \'Area\', caption: \'Area\', width: \"150px\" },\r\n               " +
"     { dataField: \'Action\', caption: \'Action\', width: \"100px\" },\r\n              " +
"      { dataField: \'Description\', caption: \'Description\', width: \"700px\" },\r\n   " +
"                 { dataField: \'Username\', caption: \'User\', width: \"130px\" },\r\n  " +
"                  { dataField: \'Processor\', caption: \'Process\', width: \"150px\" }" +
",\r\n                    { dataField: \'ValueDate\', caption: \'Value Date\', width: \"" +
"100px\", dataType: \'date\', format: \'dd/MM/yyyy\', alignment: \"center\" },\r\n        " +
"            { dataField: \'IsUserAction\', caption: \'Action?\', dataType: \'boolean\'" +
", alignment: \"center\" }\r\n                ],\r\n                columnChooser: { en" +
"abled: false },\r\n                allowColumnReordering: false,\r\n                " +
"sorting: { mode: \'single\' },\r\n                groupPanel: { visible: false },\r\n " +
"               columnAutoWidth: false,\r\n                pager: { visible: false " +
"},\r\n                paging: { enabled: false },\r\n                headerFilter: {" +
" visible: true },\r\n                rowAlternationEnabled: true,\r\n               " +
" //height: \"100%\",\r\n                // paging: { pageSize: 15 },\r\n              " +
"  scrolling: {\r\n                    mode: \'virtual\',\r\n                    preloa" +
"dEnabled: true\r\n                },\r\n                remoteOperations: false,\r\n  " +
"              loadPanel: {\r\n                    enabled: false\r\n                " +
"},\r\n                filterRow: { visible: true },\r\n                searchPanel: " +
"{ visible: true },\r\n                selection: { mode: \'single\' },\r\n            " +
"    onRowPrepared: function (rowInfo) {\r\n                    if (rowInfo.rowType" +
" == \'data\' && rowInfo.data.IsWarning)\r\n                        rowInfo.rowElemen" +
"t.css(\'background\', \'#ffff80\');\r\n                }\r\n            });\r\n        }\r\n" +
"\r\n        var refreshGrid = function()\r\n        {\r\n            RIFFWebCore.RIFFP" +
"age.populateGrid(\"");

            
            #line 62 "..\..\Views\System\UserLog.cshtml"
                                          Write(Url.Action("GetUserLog", "System"));

            
            #line default
            #line hidden
WriteLiteral(@""", {
                logDate: RIFFWebCore.Helpers.getYMD($('#logdate').dxDateBox('instance').option(""value"")),
            }, initializeGrid);
        }

        var RFinitialize = function () {
            $('#logdate').dxDateBox({
                min: null,
                max: new Date(),
                displayFormat: 'yyyy-MM-dd',
                value: new Date(");

            
            #line 72 "..\..\Views\System\UserLog.cshtml"
                           Write(RIFF.Core.RFDate.Today().Year);

            
            #line default
            #line hidden
WriteLiteral(", ");

            
            #line 72 "..\..\Views\System\UserLog.cshtml"
                                                           Write(RIFF.Core.RFDate.Today().Month);

            
            #line default
            #line hidden
WriteLiteral(" - 1, ");

            
            #line 72 "..\..\Views\System\UserLog.cshtml"
                                                                                                Write(RIFF.Core.RFDate.Today().Day);

            
            #line default
            #line hidden
WriteLiteral("),\r\n                onValueChanged: function (e) { refreshGrid(); }\r\n            " +
"});\r\n            refreshGrid();\r\n        };\r\n    </script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
