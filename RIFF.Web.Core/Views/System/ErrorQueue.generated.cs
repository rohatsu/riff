#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using RIFF.Web.Core;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/System/ErrorQueue.cshtml")]
    public partial class _Views_System_ErrorQueue_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_System_ErrorQueue_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\System\ErrorQueue.cshtml"
  
    ViewBag.Title = "Error Queue";
    Layout = "~/Views/Core/_RIFFPage.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" id=\"tabs\"");

WriteLiteral("></div>\r\n<div");

WriteLiteral(" id=\"tab1\"");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" id=\"queueContainer\"");

WriteLiteral(" style=\"height:800px; width:1500px; margin: 0 auto\"");

WriteLiteral(">\r\n    </div>\r\n</div>\r\n<div");

WriteLiteral(" id=\"tab2\"");

WriteLiteral(" class=\"tab-content\"");

WriteLiteral(" style=\"display: none;\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" id=\"completedContainer\"");

WriteLiteral(" style=\"height:800px; width:1500px; margin: 0 auto\"");

WriteLiteral(">\r\n    </div>\r\n</div>\r\n\r\n");

DefineSection("RIFFPageScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var initializeGrid = function (data) {\r\n            $(\"#queueContainer" +
"\").dxDataGrid({\r\n                hoverStateEnabled: true,\r\n                dataS" +
"ource: data.ErrorQueue,\r\n                columns: [\r\n                    { dataF" +
"ield: \'Weight\', caption: \'Weight\', dataType: \'number\', width: \'100px\', sortIndex" +
": 0, sortOrder: \'asc\' },\r\n                    { dataField: \'ProcessName\', captio" +
"n: \'Process Name\', dataType: \'string\', width: \'300px\' },\r\n                    { " +
"dataField: \'GraphInstance\', caption: \'Graph\', dataType: \'string\', width: \'75px\'," +
" alignment: \'center\' },\r\n                    { dataField: \'ValueDate\', caption: " +
"\'Value Date\', dataType: \'date\', width: \'85px\', format: \'yyyy-MM-dd\', alignment: " +
"\'center\' },\r\n                    { dataField: \'DispatchState\', caption: \'State\'," +
" dataType: \'date\', width: \'85px\', format: \'yyyy-MM-dd\', alignment: \'center\' },\r\n" +
"                    { dataField: \'LastStart\', caption: \'Last Start\', dataType: \'" +
"date\', width: \'150px\', format: \'dd/MM/yyyy HH:mm:ss\', alignment: \'center\' },\r\n  " +
"                  { dataField: \'Message\', caption: \'Message\', dataType: \'string\'" +
", width: \'450px\' },\r\n                    { dataField: \'ShouldRetry\', caption: \'T" +
"ransient?\', dataType: \'boolean\', width: \'90px\' },\r\n                    {\r\n      " +
"                  caption: \'Retry\',\r\n                        width: \"80px\",\r\n   " +
"                     alignment: \"center\",\r\n                        cellTemplate:" +
" function (container, options) {\r\n                            $(\'<a />\').addClas" +
"s(\'dx-link\')\r\n                                .text(\'Retry\')\r\n                  " +
"              .attr(\'href\', \'");

            
            #line 38 "..\..\Views\System\ErrorQueue.cshtml"
                                          Write(Url.Action("RetryError", "Process"));

            
            #line default
            #line hidden
WriteLiteral("?dp=\' + options.data.DispatchKey +\r\n                                    \'&returnU" +
"rl=\' + escape(\'");

            
            #line 39 "..\..\Views\System\ErrorQueue.cshtml"
                                                       Write(Html.Raw(Url.Action("ErrorQueue")));

            
            #line default
            #line hidden
WriteLiteral(@"'))
                                .appendTo(container);
                        }
                    },
                    {
                        caption: 'Ignore',
                        width: ""80px"",
                        alignment: ""center"",
                        cellTemplate: function (container, options) {
                            $('<a />').addClass('dx-link')
                                .text('Ignore')
                                .click(function () {
                                    RIFFWebCore.Helpers.postUserAction(""");

            
            #line 51 "..\..\Views\System\ErrorQueue.cshtml"
                                                                   Write(Url.Action("IgnoreError", "System"));

            
            #line default
            #line hidden
WriteLiteral("\", { dp: options.data.DispatchKey }, \"Error Item Ignored.\", function(data) { init" +
"ializeGrid(data); });\r\n                                })\r\n                     " +
"           .appendTo(container);\r\n                        }\r\n                   " +
" }\r\n                ],\r\n                columnChooser: { enabled: false },\r\n    " +
"            allowColumnReordering: false,\r\n                sorting: { mode: \'sin" +
"gle\' },\r\n                groupPanel: { visible: false, emptyPanelText: \'Drag a c" +
"olumn header here to group grid records\' },\r\n                columnAutoWidth: fa" +
"lse,\r\n                pager: { visible: false },\r\n                paging: { enab" +
"led: false },\r\n                headerFilter: { visible: true },\r\n               " +
" rowAlternationEnabled: false,\r\n                showRowLines: true,\r\n           " +
"     remoteOperations: false,\r\n                loadPanel: {\r\n                   " +
" enabled: false\r\n                },\r\n                filterRow: { visible: true " +
"},\r\n                searchPanel: { visible: true },\r\n                selection: " +
"{ mode: \'single\' },\r\n                onCellPrepared: function (e) {\r\n           " +
"         if (e !== undefined && e.rowType === \'data\' && e.column.caption === \'St" +
"ate\') {\r\n                        if (e.data.DispatchState === \'Finished\')\r\n     " +
"                       e.cellElement.addClass(\'greencell\');\r\n                   " +
"     else if (e.data.DispatchState === \'Started\' || e.data.DispatchState === \'Ig" +
"nored\')\r\n                            e.cellElement.addClass(\'yellowcell\');\r\n    " +
"                    else if (e.data.DispatchState === \'Error\')\r\n                " +
"            e.cellElement.addClass(\'redcell\');\r\n                    }\r\n         " +
"       }\r\n            });\r\n\r\n            $(\"#completedContainer\").dxDataGrid({\r\n" +
"                hoverStateEnabled: true,\r\n                dataSource: data.Compl" +
"eted,\r\n                columns: [\r\n                    { dataField: \'LastStart\'," +
" caption: \'Last Start\', dataType: \'date\', width: \'150px\', format: \'dd/MM/yyyy HH" +
":mm:ss\', alignment: \'center\', sortIndex: 0, sortOrder: \'desc\' },\r\n              " +
"      { dataField: \'ProcessName\', caption: \'Process Name\', dataType: \'string\', w" +
"idth: \'410px\' },\r\n                    { dataField: \'GraphInstance\', caption: \'Gr" +
"aph\', dataType: \'string\', width: \'75px\', alignment: \'center\' },\r\n               " +
"     { dataField: \'ValueDate\', caption: \'Value Date\', dataType: \'date\', width: \'" +
"85px\', format: \'yyyy-MM-dd\', alignment: \'center\' },\r\n                    { dataF" +
"ield: \'DispatchState\', caption: \'State\', dataType: \'date\', width: \'85px\', format" +
": \'yyyy-MM-dd\', alignment: \'center\' },\r\n                    { dataField: \'Messag" +
"e\', caption: \'Message\', dataType: \'string\', width: \'690px\' },\r\n                ]" +
",\r\n                columnChooser: { enabled: false },\r\n                allowColu" +
"mnReordering: false,\r\n                sorting: { mode: \'single\' },\r\n            " +
"    groupPanel: { visible: false, emptyPanelText: \'Drag a column header here to " +
"group grid records\' },\r\n                columnAutoWidth: false,\r\n               " +
" pager: { visible: false },\r\n                paging: { enabled: false },\r\n      " +
"          headerFilter: { visible: true },\r\n                rowAlternationEnable" +
"d: false,\r\n                showRowLines: true,\r\n                remoteOperations" +
": false,\r\n                onCellPrepared: function(e)\r\n                {\r\n      " +
"              if(e !== undefined && e.rowType === \'data\' && e.column.caption ===" +
" \'State\')\r\n                    {\r\n                        if (e.data.DispatchSta" +
"te === \'Finished\')\r\n                            e.cellElement.addClass(\'greencel" +
"l\');\r\n                        else if (e.data.DispatchState === \'Started\' || e.d" +
"ata.DispatchState === \'Ignored\')\r\n                            e.cellElement.addC" +
"lass(\'yellowcell\');\r\n                        else if (e.data.DispatchState === \'" +
"Error\')\r\n                            e.cellElement.addClass(\'redcell\');\r\n       " +
"             }\r\n                },\r\n                loadPanel: {\r\n              " +
"      enabled: false\r\n                },\r\n                filterRow: { visible: " +
"true },\r\n                searchPanel: { visible: true },\r\n                select" +
"ion: { mode: \'single\' }\r\n            });\r\n\r\n            RIFFWebCore.RIFFPage.ref" +
"reshSystemStatus();\r\n        }\r\n\r\n        var RFinitialize = function () {\r\n\r\n  " +
"          $(\'#tabs\').dxTabs({\r\n                dataSource:\r\n                    " +
"[\r\n                        { text: \"Error Queue\", content: \"#tab1\" },\r\n         " +
"               { text: \"Recently Completed\", content: \"#tab2\" },\r\n              " +
"      ],\r\n                width: \"30%\",\r\n                selectedIndex: 0,\r\n    " +
"            onItemClick: function (e) {\r\n                    $(\".tab-content\").h" +
"ide();\r\n                    $(e.itemData.content).show();\r\n                    i" +
"f (e.itemData.content === \"#tab1\") {\r\n                        $(\'#queueContainer" +
"\').dxDataGrid(\'instance\').repaint();\r\n                    } else if (e.itemData." +
"content === \"#tab2\") {\r\n                        $(\'#completedContainer\').dxDataG" +
"rid(\'instance\').repaint();\r\n                    }\r\n                }\r\n          " +
"  });\r\n\r\n            RIFFWebCore.RIFFPage.populateGrid(\"");

            
            #line 152 "..\..\Views\System\ErrorQueue.cshtml"
                                          Write(Url.Action("GetErrorQueue", "System"));

            
            #line default
            #line hidden
WriteLiteral("\", null, initializeGrid);\r\n        };\r\n    </script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
