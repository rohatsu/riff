#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using RIFF.Web.Core;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/System/Processes.cshtml")]
    public partial class _Views_System_Processes_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_System_Processes_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\System\Processes.cshtml"
  
    ViewBag.Title = "Processes";
    Layout = "~/Views/Core/_RIFFPage.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" class=\"dx-fieldset\"");

WriteLiteral(" style=\"width: 300px;\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(">Graph Date</div>\r\n        <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"instancedate\"");

WriteLiteral("></div>\r\n    </div>\r\n    <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(">Graph Instance</div>\r\n        <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"instancename\"");

WriteLiteral("></div>\r\n    </div>\r\n</div>\r\n<div");

WriteLiteral(" id=\"gridContainer\"");

WriteLiteral(" style=\"width:1550px; margin: 0 auto; height: 750px;\"");

WriteLiteral("></div>\r\n");

WriteLiteral("\r\n");

DefineSection("RIFFPageScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n\r\n        var uploadDomain = function (p) {\r\n            $(\'#uploaddialog\').dx" +
"Popup({\r\n                showTitle: true,\r\n                title: \'Upload \' + p " +
"+ \' Domain\',\r\n                width: 400,\r\n                height: 180,\r\n       " +
"         visible: true\r\n            });\r\n\r\n            $(\'#uploadfile\').dxFileUp" +
"loader({\r\n                name: \'filedata\', multiple: false, uploadMode: \'useFor" +
"m\', labelText: \'(or drop here)\', readyToUploadMessage: \'Please wait...\',\r\n      " +
"          onValueChanged: function () {\r\n                    $(\'#uploadform\').su" +
"bmit();\r\n                }\r\n            });\r\n        }\r\n\r\n        var initialize" +
"Grid = function (data) {\r\n            $(\"#gridContainer\").dxDataGrid({\r\n        " +
"        hoverStateEnabled: true,\r\n                dataSource: data,\r\n\r\n         " +
"       columns: [\r\n                    { dataField: \'Graph\', caption: \'Graph\', w" +
"idth: \"100px\" },\r\n                    { dataField: \'Name\', caption: \'Name\', widt" +
"h: \"250px\" },\r\n                    { dataField: \'Description\', caption: \'Descrip" +
"tion\', width: \"390px\" },\r\n                    { dataField: \'Type\', caption: \'Typ" +
"e\', width: \"300px\" },\r\n                    //{ dataField: \'Idle\', caption: \'Idle" +
"\', width: \"100px\" },\r\n                    { dataField: \'LastRun\', caption: \'Last" +
" Run\', width: \"150px\", dataType: \'date\', format: \"dd/MM/yyyy HH:mm:ss\", alignmen" +
"t: \"center\" },\r\n                    { dataField: \'LastDuration\', caption: \'[ms]\'" +
", width: \"75px\", format: \"fixedPoint\" },\r\n                    {\r\n//             " +
"           dataField: \'FullName\',\r\n                        caption: \'Execute\',\r\n" +
"                        width: \"75px\",\r\n                        alignment: \"cent" +
"er\",\r\n                        cellTemplate: function (container, options) {\r\n   " +
"                         $(\'<a />\').addClass(\'dx-link\')\r\n                       " +
"         .text(\'Run\')\r\n                                .attr(\'href\', \'");

            
            #line 72 "..\..\Views\System\Processes.cshtml"
                                          Write(Url.Action("RunProcess", "Process"));

            
            #line default
            #line hidden
WriteLiteral(@"?isGraph=' + options.data.IsGraph +
                                    '&processName=' + escape(options.data.FullName) +
                                    '&instanceName=' + escape($('#instancename').dxTextBox('instance').option(""value"")) +
                                    '&instanceDate=' + RIFFWebCore.Helpers.getYMD($('#instancedate').dxDateBox('instance').option(""value"")))
                                .appendTo(container);
                        }
                    },
                    {
//                        dataField: 'FullName',
                        caption: 'Input',
                        width: ""75px"",
                        alignment: ""center"",
                        cellTemplate: function (container, options) {
                            if (options.data.IsGraph) {
                                $('<a />').addClass('dx-link')
                                    .text('Download')
                                    .attr('href', '");

            
            #line 88 "..\..\Views\System\Processes.cshtml"
                                              Write(Url.Action("GetProcessDomain", "System"));

            
            #line default
            #line hidden
WriteLiteral(@"' +
                                        '?processName=' + escape(options.data.FullName) +
                                        '&instanceName=' + escape($('#instancename').dxTextBox('instance').option(""value"")) +
                                        '&instanceDate=' + RIFFWebCore.Helpers.getYMD($('#instancedate').dxDateBox('instance').option(""value"")))
                                    .appendTo(container);
                            }
                        }
                    },
                    ");

WriteLiteral(@"
                ],
                columnChooser: { enabled: false },
                allowColumnReordering: false,
                sorting: { mode: 'single' },
                groupPanel: { visible: true, emptyPanelText: 'Drag a column header here to group grid records' },
                columnAutoWidth: false,
                pager: { visible: false },
                paging: { enabled: false },
                headerFilter: { visible: true },
                rowAlternationEnabled: true,
                //height: ""100%"",
                // paging: { pageSize: 15 },
                scrolling: {
                    mode: 'virtual',
                    preloadEnabled: true
                },
                masterDetail: {
                    enabled: true,
                    template: function (container, info) {
                        $('<div>').dxDataGrid({
                            columnAutoWidth: true,
                            dataSource: info.row.data.IO
                        }).appendTo(container);
                    }
                },
                remoteOperations: false,
                loadPanel: {
                    enabled: false
                },
                filterRow: { visible: true },
                searchPanel: { visible: true },
                selection: { mode: 'single' }
            });
        }

        var refreshGrid = function()
        {
            RIFFWebCore.RIFFPage.populateGrid(""");

            
            #line 154 "..\..\Views\System\Processes.cshtml"
                                          Write(Url.Action("GetProcesses", "System"));

            
            #line default
            #line hidden
WriteLiteral(@""", {
                instanceName: $('#instancename').dxTextBox('instance').option(""value""),
                instanceDate: RIFFWebCore.Helpers.getYMD($('#instancedate').dxDateBox('instance').option(""value"")),
            }, initializeGrid);
        }

        var RFinitialize = function () {
            $('#instancedate').dxDateBox({
                min: null,
                max: new Date(),
                displayFormat: 'yyyy-MM-dd',
                value: new Date(");

            
            #line 165 "..\..\Views\System\Processes.cshtml"
                            Write(RIFF.Core.RFDate.Today().Year);

            
            #line default
            #line hidden
WriteLiteral(", ");

            
            #line 165 "..\..\Views\System\Processes.cshtml"
                                                              Write(RIFF.Core.RFDate.Today().Month);

            
            #line default
            #line hidden
WriteLiteral(" - 1, ");

            
            #line 165 "..\..\Views\System\Processes.cshtml"
                                                                                                     Write(RIFF.Core.RFDate.Today().Day);

            
            #line default
            #line hidden
WriteLiteral("),\r\n                onValueChanged: function (e) { refreshGrid(); }\r\n            " +
"});\r\n            $(\'#instancename\').dxTextBox({\r\n                placeholder: \'G" +
"raph Instance Name\',\r\n                value: \'");

            
            #line 170 "..\..\Views\System\Processes.cshtml"
                   Write(RIFF.Core.RFGraphInstance.DEFAULT_INSTANCE);

            
            #line default
            #line hidden
WriteLiteral("\'\r\n            });\r\n            refreshGrid();\r\n        };\r\n    </script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
