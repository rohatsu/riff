#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASP
{
    using RIFF.Web.Core;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/System/InputReports.cshtml")]
    public partial class _Views_System_InputReports_cshtml : System.Web.Mvc.WebViewPage<dynamic>
    {
        public _Views_System_InputReports_cshtml()
        {
        }
        public override void Execute()
        {
            
            #line 1 "..\..\Views\System\InputReports.cshtml"
  
    ViewBag.Title = "Input Reports";
    Layout = "~/Views/Core/_RIFFPage.cshtml";

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n<div");

WriteLiteral(" class=\"dx-fieldset\"");

WriteLiteral(" style=\"width: 300px;\"");

WriteLiteral(">\r\n    <div");

WriteLiteral(" class=\"dx-field\"");

WriteLiteral(">\r\n        <div");

WriteLiteral(" class=\"dx-field-label\"");

WriteLiteral(">Value Date</div>\r\n        <div");

WriteLiteral(" class=\"dx-field-value\"");

WriteLiteral(" id=\"valuedate\"");

WriteLiteral("></div>\r\n    </div>\r\n</div>\r\n\r\n<div");

WriteLiteral(" id=\"gridContainer\"");

WriteLiteral(" style=\"min-height:500px; width:1100px; margin: 0 auto\"");

WriteLiteral("></div>\r\n");

WriteLiteral("\r\n");

DefineSection("RIFFPageScripts", () => {

WriteLiteral("\r\n    <script");

WriteLiteral(" type=\"text/javascript\"");

WriteLiteral(">\r\n        var initializeGrid = function (data) {\r\n            $(\"#gridContainer\"" +
").dxDataGrid({\r\n                hoverStateEnabled: true,\r\n                dataSo" +
"urce: data,\r\n\r\n                columns: [\r\n                    { dataField: \'Upd" +
"ateDate\', caption: \'Date\', dataType: \'date\', format: \"dd/MM/yyyy\", sortIndex: 0," +
" sortOrder: \'desc\', width: \"75px\", alignment: \"center\" },\r\n                    {" +
" dataField: \'UpdateTime\', caption: \'Time\', dataType: \'date\', format: \"HH:mm:ss\"," +
" sortIndex: 1, sortOrder: \'desc\', width: \"75px\", allowFiltering: false, alignmen" +
"t: \"center\" },\r\n                    { dataField: \'ReportCode\', caption: \'Code\', " +
"width: \"480px\" },\r\n                    { dataField: \'ReportDescription\', caption" +
": \'Description\', width: \"350px\", visible: false },\r\n                    { dataFi" +
"eld: \'ValueDate\', caption: \'Value Date\', dataType: \'date\', format: \"dd/MM/yyyy\"," +
" width: \"75px\", allowFiltering: false, alignment: \"center\" },\r\n                 " +
"   { dataField: \'NumRows\', caption: \'# Rows\', width: \"100px\", format: \"fixedPoin" +
"t\" },\r\n                    { dataField: \'SourceUniqueKey\', visible: false },\r\n  " +
"                  {\r\n                        dataField: \'Key\',\r\n                " +
"        caption: \'Download\',\r\n                        width: \"100px\",\r\n         " +
"               alignment: \"center\",\r\n                        cellTemplate: funct" +
"ion (container, options) {\r\n                            $(\'<a />\').addClass(\'dx-" +
"link\')\r\n                                .text(\'Original file\')\r\n                " +
"                .attr(\'href\', \'");

            
            #line 55 "..\..\Views\System\InputReports.cshtml"
                                          Write(Url.Action("GetInputFile", "System"));

            
            #line default
            #line hidden
WriteLiteral(@"?uniqueKey=' + options.data.SourceUniqueKey)
                                .appendTo(container);
                        }
                    },
                    {
                        dataField: 'Key',
                        caption: 'Download',
                        width: ""100px"",
                        alignment: ""center"",
                        cellTemplate: function (container, options) {
                            $('<a />').addClass('dx-link')
                                .text('In .csv format')
                                .attr('href', '");

            
            #line 67 "..\..\Views\System\InputReports.cshtml"
                                          Write(Url.Action("DownloadEntry", "System"));

            
            #line default
            #line hidden
WriteLiteral("?keyReference=\' + options.data.KeyReference + \'&type=");

            
            #line 67 "..\..\Views\System\InputReports.cshtml"
                                                                                                                                      Write(typeof(RIFF.Framework.RFRawReportKey).FullName);

            
            #line default
            #line hidden
WriteLiteral(@"')
                                .appendTo(container);
                        }
                    },
                    {
                        dataField: 'Key',
                        caption: 'Edit',
                        width: ""100px"",
                        alignment: ""center"",
                        cellTemplate: function (container, options) {
                            $('<a />').addClass('dx-link')
                                .text('Edit manually')
                                .attr('href', '");

            
            #line 79 "..\..\Views\System\InputReports.cshtml"
                                          Write(Url.Action("InputReport", "System"));

            
            #line default
            #line hidden
WriteLiteral("?keyReference=\' + options.data.KeyReference + \'&type=");

            
            #line 79 "..\..\Views\System\InputReports.cshtml"
                                                                                                                                    Write(typeof(RIFF.Framework.RFRawReportKey).FullName);

            
            #line default
            #line hidden
WriteLiteral("\')\r\n                                .appendTo(container);\r\n                      " +
"  }\r\n                    }\r\n\r\n                    ");

WriteLiteral(@"
                ],
                columnChooser: { enabled: false },
                allowColumnReordering: false,
                sorting: { mode: 'single' },
                groupPanel: { visible: true, emptyPanelText: 'Drag a column header here to group grid records' },
                columnAutoWidth: false,
                pager: { visible: true },
                headerFilter: { visible: true },
                rowAlternationEnabled: true,
                //paging: { pageSize: 15 },
                scrolling: {
                    mode: 'virtual',
                    preloadEnabled: true
                },
                remoteOperations: false,
                loadPanel: {
                    enabled: false
                },
                filterRow: { visible: true },
                searchPanel: { visible: true },
                selection: { mode: 'single' }
            });
        }

        var refreshGrid = function()
        {
            RIFFWebCore.RIFFPage.populateGrid(""");

            
            #line 123 "..\..\Views\System\InputReports.cshtml"
                                          Write(Url.Action("GetInputReports", "System"));

            
            #line default
            #line hidden
WriteLiteral(@""", {
                valueDate: RIFFWebCore.Helpers.getYMD($('#valuedate').dxDateBox('instance').option(""value"")),
            }, initializeGrid);
        }

        var RFinitialize = function () {
            $('#uploadfile').dxFileUploader({ name: 'filedata', multiple: false });
            $('#uploadkey').dxTextBox({ name: 'filekey', width: ""100px"" });
            $('#uploadbutton').dxButton({
                text: 'Submit', onClick: function () {
                    $('#filekey').val($('#uploadkey').dxTextBox('instance').option(""value""));
                    $('#uploadform').submit();
                }
            });

            $('#valuedate').dxDateBox({
                min: null,
                max: new Date(),
                displayFormat: 'yyyy-MM-dd',
                value: new Date(");

            
            #line 142 "..\..\Views\System\InputReports.cshtml"
                            Write(RIFF.Core.RFDate.Today().Year);

            
            #line default
            #line hidden
WriteLiteral(", ");

            
            #line 142 "..\..\Views\System\InputReports.cshtml"
                                                              Write(RIFF.Core.RFDate.Today().Month);

            
            #line default
            #line hidden
WriteLiteral(" - 1, ");

            
            #line 142 "..\..\Views\System\InputReports.cshtml"
                                                                                                     Write(RIFF.Core.RFDate.Today().Day);

            
            #line default
            #line hidden
WriteLiteral("),\r\n                onValueChanged: function (e) { refreshGrid(); }\r\n            " +
"});\r\n\r\n            ");

WriteLiteral("\r\n            refreshGrid();\r\n        };\r\n    </script>\r\n");

});

        }
    }
}
#pragma warning restore 1591
